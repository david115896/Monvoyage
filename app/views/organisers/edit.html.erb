
<div class="border p-3">
  <div class="row pl-5 pr-5 justify-content-between text-center">
    <div class="col-3">
     <%= button_to "Go back to Activities", city_activities_path(@city.id), class:"btn btn-outline-primary" %>
    </div>
    <div class="col-6 d-inline-flex justify-content-center">
     <div class="">
        <div class="mb-2">

        <%= form_for @organiser,  method: :patch  do |form| %>
          <div class="input-group">
            <%= form.label "How many days?", class: "form-control border-0" %>
              <span class="input-group-btn">
                  <%= form.select(:duration, duration_options, {}, {class: "form-control"}) %>
              </span>
              <span class="input-group-btn">
                <%= form.submit "Validate", class:"btn btn-primary btn-sm ml-3" %>
              </span>
          </div>	
        <% end %>
           </div>
              <div class="mb-2">

        <%= form_for @organiser, url: edit_organiser_path(@organiser.id),  method: :get do |form| %>
          <div class="input-group">
            <%= form.label "Day to visualize?", class: "form-control border-0" %>
            <span class="input-group-btn">
              <%= form.select(:duration, day_options, {}, {class: "form-control"})%>
            </span>
            <span class="input-group-btn">
            <%= form.submit "Validate", class:"btn btn-primary btn-sm ml-3" %>
           </span>
          </div>	
        <% end %>
                 </div>

      </div>
    </div>
    <div class="col-3">

    <%= link_to 'Validate my agenda', checkouts_path, class:"btn btn-outline-primary" %>
  </div>
</div>

<div class="row ml-3">

<div class="col-4">
    <div class="tabl-cart">
    <table class="table ">
      <thead>
        <tr>
          <th scope="col">Activities</th>
          <th scope="col">Duration</th>
          <th scope="col">Tickets</th>

        </tr>
      </thead>
      <tbody>
				<% for checkout in  @unselected_checkouts do %>
          <tr>
            <td><%= checkout.ticket.activity.name %></td>
            <td><%= checkout.ticket.duration/60 %>h</td>
						<td>
							<%= form_with(model: checkout.ticket, url: checkout, class:"row justify-content-center") do |form| %>
								<%= form.collection_select(:id, ticket_options(checkout), :id, :name, {}, {class: "form-control mb-2"}) %>
								<%= form.submit "Add to my planning",  method: :patch, class:"btn btn-outline-primary btn-sm p-2"  %>
							<% end %>
						</td>
          </tr>
				<% end %>
      </tbody>
    </table>
  </div>

</div>
<div class="col-4 ">
  <div class="tabl-cart">
    <table class="table ">
      <thead>
        <tr>
          <th scope="col">Planning</th>
        </tr>
      </thead>
      <tbody>
        <% time = 9 %>
          <% for checkout in @selected_checkouts do %>
						<% if checkout.day == session[:current_day] %>
							<tr>
									<td>
									<div class="card">
										<div class="card-header">
											<%= checkout.index %>
											<p> <%= time%> h <%= checkout.ticket.duration%60 %> </p>
											<% time+= (checkout.ticket.duration)/60%>

										</div>
										<div class="d-flex card-body">
											<% if checkout.index != 1  %>
												<%= link_to 'd', checkout_path(checkout.id,:commit => "down"), method: :patch %>
											<% end %>
											<h5 class="card-title"><%= checkout.ticket.name %></h5>

											<% if !checkout.paid %>
												<%= link_to checkout_path(checkout.id,:commit => "unselect"), method: :patch do%> <i class="fas fa-trash fa-2x ml-4"></i> <% end %> 
											<% else %>
												<i class="fas fa-trash fa-2x ml-4 black"></i>
												<% end %>
											<% if checkout.index != last_index  %>
												<%= link_to 'u', checkout_path(checkout.id,:commit => "up"), method: :patch %>
											<% end %>
										</div>
									</div>
									</td>
							</tr>
						<% end %>
          <% end %>

      </tbody>
    </table>
  </div>

</div>


<div class="col-4 ">

  <div id="map" class="map"></div>

    <script>
      function initMap() {
        var city = gon.city;
        var activities = gon.organiser_activities;
       // alert(Object.values(activities)[0].latitude)
         // alert(Object.values(activities)['day1'][1]['latitude'])
       //alert(activities['day0'][0]['latitude'])
        //alert(activities['day0'][1]['latitude'])


        var directionsService = new google.maps.DirectionsService;
        var map = new google.maps.Map(document.getElementById('map'), {
          zoom: 13,
          center: {lat: city.latitude, lng: city.longitude}
        });

        var icons = {
          start: new google.maps.MarkerImage(
            // URL
            'http://maps.google.com/mapfiles/ms/micons/blue.png',
            // (width,height)
            new google.maps.Size(44, 32),
            // The origin point (x,y)
            new google.maps.Point(0, 0),
            // The anchor point (x,y)
            new google.maps.Point(22, 32)),
          end: new google.maps.MarkerImage(
            // URL
            'http://maps.google.com/mapfiles/ms/micons/green.png',
            // (width,height)
            new google.maps.Size(44, 32),
            // The origin point (x,y)
            new google.maps.Point(0, 0),
            // The anchor point (x,y)
            new google.maps.Point(22, 32))
        };

        function makeMarker( position, icon, title, label ) {
          new google.maps.Marker({
            position: position,
            map: map,
            icon: icon,
            //label: labels[labelIndex++ % labels.length],
            //label: label,
            title: title
          });
        }

  
      function renderDirections(result, title_start,title_end ) { 
          //var directionsRenderer = new google.maps.DirectionsRenderer(); 
          var directionsRenderer = new google.maps.DirectionsRenderer({suppressMarkers: true});

          directionsRenderer.setMap(map); 
          directionsRenderer.setDirections(result); 
          var leg = result.routes[ 0 ].legs[ 0 ];
          makeMarker( leg.start_location, icons.start, title_start, "start" );
          makeMarker( leg.end_location, icons.end, title_end, "end" );
        }     

        function requestDirections(start, end, title_start,title_end ) { 
          directionsService.route({ 
            origin: start, 
            destination: end, 
            travelMode: 'TRANSIT' //WALKING, TRANSIT, DRIVING
            
          }, function(result) { 
            renderDirections(result, title_start.name, title_end.name); 
          }); 
        } 


        requestDirections({lat: activities['day0'][0]['latitude'], lng: activities['day0'][0]['longitude']}, {lat: activities['day0'][1]['latitude'], lng: activities['day0'][1]['longitude']}, {name: activities['day0'][0]['name']}, {name: activities['day0'][1]['name']} ); 
        requestDirections({lat: activities['day0'][1]['latitude'], lng: activities['day0'][1]['longitude']}, {lat: activities['day0'][2]['latitude'], lng: activities['day0'][2]['longitude']}, {name: activities['day0'][1]['name']}, {name: activities['day0'][2]['name']}); 

  }

    </script>


    <script async defer
    src="<%="https://maps.googleapis.com/maps/api/js?key=#{ENV['MAP_KEY']}&callback=initMap"%>">
    </script>
  </div>
</div>
</div>






